---
#### Creating RDS subnet group ####
#- name:
#  debug:
#    msg: "{{ kms_key_id }}"
    
#- name:
#  debug:
#    msg: "{{ subnets_list }}"
    
- name: Add or change a subnet group
  community.aws.rds_subnet_group:
    state: present
    name: "{{ subnet_group_name }}"
    description: "{{ subnet_group_description }}"
    region: "{{ region }}"
    subnets: "{{ subnets_list }}"
      #- "{{ subnets_1 }}"
      #- "{{ subnets_2 }}"
      #- "{{ subnets_3 }}"     
#### Creating RDS Parameter Group ####

- name: Creating Parameter Group
  community.aws.rds_param_group:
    state: present
    name: "{{ db_parameter_group_name }}"
    description: "{{ para_group_description }}"
    engine: "{{ para_engine }}"
    region: "{{ region }}"

#### Creating RDS Option Group ####

- name: Create an RDS sql option group
  community.aws.rds_option_group:
    state: present
    option_group_name: "{{ option_group_name }}"
    engine_name: "{{ engine_name }}"
    major_engine_version: "{{ major_engine_version }}"
    option_group_description: "{{  option_group_description }}"
    region: "{{ region }}"
    apply_immediately: true
  register: new_rds_mssql_option_group
  
#### Creating KMS Key ####
  
#- name: Creating KMS key
#  amazon.aws.kms_key:
#    alias: mykey
#    tags:
#      Name: mykey  
#      Purpose: protect_RDS
#    region: ap-south-1
#  register: rds_info
#  when: kms_key_id == None

#- name: Print the KMS ID
#  debug:
#    msg: "The KMS ID is {{ rds_info.key_id if kms_key_id == None else kms_key_id }}"
#  when: kms_key_id == None
  
  
#- name: Update IAM policy on an existing KMS key
#  amazon.aws.kms_key:
#    alias: mykey
#    policy: {"Id": "key-consolepolicy-3","Version": "2012-10-17","Statement": [{"Sid": "Enable IAM User Permissions","Effect": "Allow","Principal": {"AWS": "arn:aws:iam::107506015003:root"},"Action": "kms:*","Resource": "*"},{"Sid": "Allow access for Key Administrators","Effect": "Allow","Principal": {"AWS": "arn:aws:iam::107506015003:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS"},"Action": ["kms:Create*","kms:Describe*","kms:Enable*","kms:List*","kms:Put*","kms:Update*","kms:Revoke*","kms:Disable*","kms:Get*","kms:Delete*","kms:TagResource","kms:UntagResource","kms:ScheduleKeyDeletion","kms:CancelKeyDeletion"],"Resource": "*"},{"Sid": "Allow use of the key","Effect": "Allow","Principal": {"AWS": "arn:aws:iam::107506015003:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS"},"Action": ["kms:Encrypt","kms:Decrypt","kms:ReEncrypt*","kms:GenerateDataKey*","kms:DescribeKey"],"Resource": "*"},{"Sid": "Allow attachment of persistent resources","Effect": "Allow","Principal": {"AWS": "arn:aws:iam::107506015003:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS"},"Action": ["kms:CreateGrant","kms:ListGrants","kms:RevokeGrant"],"Resource": "*","Condition": {"Bool": {"kms:GrantIsForAWSResource": "true"}}}]}
#    state: present
#    region: ap-south-1
    
#### Creating RDS instance ####

- name: create RDS instance
  community.aws.rds_instance:
    region: "{{ region }}"
    state: "present"
    engine: "{{ db_engine }}"
    license_model: "license-included"
    engine_version: "{{ db_engine_version }}"
    db_instance_identifier: "{{ instance_identifier}}"
    master_username: "{{ master_username }}"
    master_user_password: "{{ master_passwd }}"
    db_instance_class: "{{ instance_class }}"
    storage_type: "{{ storage_type }}"
    allocated_storage: "{{ allocated_storage }}"
    max_allocated_storage: "{{ max_allocated_storage }}"
    multi_az: "{{ multi_az }}"
    db_subnet_group_name: "{{ subnet_group_name }}"
    publicly_accessible: "{{ publicly_accessible }}"
    vpc_security_group_ids: "{{ vpc_security_group_id }}"
    port: "{{ port }}"
    backup_retention_period: "{{ backup_retention_period }}"
    storage_encrypted: "{{ storage_encrypted }}"
    kms_key_id: "{{ rds_info.key_id if kms_key_id == None else kms_key_id }}"
    db_parameter_group_name: "{{ db_parameter_group_name }}"
    option_group_name: "{{ option_group_name }}"
    timezone: "{{ timezone }}"
    auto_minor_version_upgrade: "{{ auto_minor_version_upgrade }}"
    wait: "{{ wait }}"
    enable_iam_database_authentication: "{{ enable_iam_database_authentication }}"
    debug_botocore_endpoint_logs: "{{ debug_botocore_endpoint_logs }}"
    deletion_protection: "{{ deletion_protection }}"
    apply_immediately: "{{ apply_immediately }}"
    force_failover: "{{ force_failover }}"
    read_replica: "{{ read_replica }}"
    copy_tags_to_snapshot: "{{ copy_tags_to_snapshot }}"
    allow_major_version_upgrade: "{{ allow_major_version_upgrade }}"
    skip_final_snapshot: "{{ skip_final_snapshot }}"
  register: rds_info.endpoint.address

- set_fact:
    rds_enpoint: "{{ rds_info.endpoint.address }}" 

- name: RDS endpoint
  debug:
    var: rds_endpoint
